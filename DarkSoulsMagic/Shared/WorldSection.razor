@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.IO;
@using MagicSite;

@inject Services.MagicSiteServices.WebsiteConfig config


@if (Displayed)
{
    @if (Title != null)
    {
        <h2>@Title</h2>
    }

    @if (Description != null)
    {
        <p class="spoiler-subtitle">
            @Description
        </p>
    }

    @if (worldSectionInfos == null)
    {
        <p class="loading-bar">@config.info.loadingText</p>
    }
    else
    {
        foreach (WorldSectionInfo info in worldSectionInfos)
        {
            <div class="world-entry" style="@(GenerateStyle(info))">
                <img class="card-image" src="@($"/hlw_card_images/{info.cardImageName}.full.png")" alt="@info.cardImageName" />
                <div class="world-entry-info">
                    <h3 class="header-with-mana">
                        <span>@info.name</span>
                        @if (info.showColorsAsHybrid)
                        {
                            <img src="mana_symbols/@($"mana_{info.colorCode}.png")" />
                        }
                        else
                        {
                            for (int i = 0; i < info.colorCode.Length; i++)
                            {
                                <img src="mana_symbols/@($"mana_{info.colorCode[i]}.png")" />
                            }
                        }
                    </h3>
                    <p>@info.description</p>
                </div>
            </div>
        }
    }
}

@code {
    [Parameter]
    public string JsonFileName { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Description { get; set; }

    [Parameter]
    public bool Displayed { get; set; }

    private WorldSectionInfo[] worldSectionInfos;

    protected override async Task OnInitializedAsync()
    {
        using (FileStream fs = File.OpenRead($"wwwroot/website_info/{JsonFileName}.json"))
        {
            worldSectionInfos = await JsonSerializer.DeserializeAsync<WorldSectionInfo[]>(fs);
        }
    }

    private string GenerateStyle(WorldSectionInfo info)
    {
        if (info.backgroundColorGold)
        {
            return $"background-color: #d0c174; color: black;";
        }
        else if (info.colorCode.Length == 1)
        {
            return $"background-color: {Color.GetColorOfCode(info.colorCode).backgroundHexcode}; color: black;";
        }
        else
        {
            return $"background-image: linear-gradient(to right, {GenerateGradient(info)}); color: black;";
        }
    }

    private string GenerateGradient(WorldSectionInfo info)
    {
        string gradient = "";
        for (int i = 0; i < info.colorCode.Length; i++)
        {
            string code = info.colorCode.Substring(i, 1);
            string hex = Color.GetColorOfCode(code).backgroundHexcode;
            double percent = Math.Round((double)(100 * i / (info.colorCode.Length - 1)), 2);
            gradient += $"{hex} {percent}%";
            if (i < info.colorCode.Length - 1)
            {
                gradient += ", ";
            }
        }

        return gradient;
    }
}